@{
    ViewData["Title"] = "View Departments";
    // var departments = (List<DepartmentModel>) ViewData["Departments"];
}
<div class="row">
    <div class="col-12 col-lg-9">
        <h3 class="mbr-section-title mbr-fonts-style align-left mb-0 display-2">
            <strong>View Departments</strong>
        </h3>
    </div>
    <div class="col-12 col-lg-3">
        <a asp-controller="Department" asp-action="Add" class="btn-xs btn-sm btn-secondary"> Add Department</a>
    </div>
</div>
<div class="p-2">
    <table id="departmentsTable" class="table table-hover table-responsive" style="width:100%">
        <thead>
        <tr>
            <th>Department Name</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tfoot>
        <tr>
            <th>Department Name</th>
            <th>Actions</th>
        </tr>
        </tfoot>
    </table>
</div>
<script>
$(document).ready(function() {
    
    var departmentsTable = $('#departmentsTable').DataTable( {
        "processing": true,
                    "serverSide": true,
                    "ajax": {
                        "url": "/Department/GetTopHundred",
                        "type": "POST",
                        "content-type": "application/x-www-form-urlencoded",
                    },
                    "columns": [
                        // { "data": "avatar" },
                        {"data": "name"},
                        // {"data": "id"},
                    ],
                    "columnDefs": [{
                                      "targets": 1,
                                      "data": null,
                                      "defaultContent": ""
                                          + "<div class='badge rounded-pill bg-primary m-1 btn-edit p-2' title='Edit' role='button'>Edit</div>"
                                          + "<div class='badge rounded-pill bg-danger m-1 btn-delete p-2' title='Delete' role='button'>Delete</div>"
                                  }]
    } );
    
            let $departmentsTable = $('#departmentsTable tbody');
            
            $departmentsTable.on('click', '.btn-delete', function () {
    
                var data = departmentsTable.row($(this).parents('tr')).data();
    
                var url = '/Department/Delete/'+data['id'];                
                
                var contentType = "application/x-www-form-urlencoded"
                
                var type = "get";
    
                // var postingData = {IdEncryption: data['id']}
                var postingData = new FormData();
                postingData.append("IdEncryption", data['id']);
                /*var data = postingData.serialize();
                console.log(data)*/
    
                swal({
                    title: "Confirm",
                    text: "Delete Department?",
                    type: "info",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Yes",
                    closeOnConfirm: false
                }, function () {
                    $(".confirm").attr('disabled', 'disabled');
                    submittingData(url, postingData, contentType, type);
                });
    
            });
    
            $departmentsTable.on('click', '.btn-edit', function () {
                var data = departmentsTable.row($(this).parents('tr')).data();
    
                window.location.href = '/Department/Edit/' + data['id'];
    
            });
    
            function submittingData(url, postingData, contentType, type) {
            
                if(type == undefined || type == null)
                {
                    type = "post";
                }
                
                        $.ajax({
                            url: url,                            
                            type: type,
                            // data: postingData,
                            datatype: 'json',
                            enctype: 'multipart/form-data',
                            processData: false,
                            contentType: contentType,
                            cache: false,
                            success: function (response) {
                                console.log(response);
                                switch (response.status) {
                                    case "success":
                                        swal({
                                                title: "Success",
                                                text: response.message,
                                                type: "success",
                                                showCancelButton: false,
                                                confirmButtonClass: "btn-primary",
                                                confirmButtonText: "Okay",
                                                closeOnConfirm: true
                                            },
                                            function () {
                                                window.location.href = "/Department";
                                            });
                                        break;
                                    case "warning" :
                                        swal("Warning", response.message, "warning");
                                        break;
                                    case "error" :
                                        swal("Error", response.message, "error");
                                        break;
                                    default:
                                        swal("System Error!", response.message, "error");
                                }
                            }, error: function (jqXHR, exception) {
                                getErrorMessage(jqXHR, exception);
                            },
                        });
                    }
                    
             // This function is used to get error message for all ajax calls
            function getErrorMessage(jqXHR, exception) {
                        var msg = '';
                        if (jqXHR.status === 0) {
                            msg = 'Not connect.\n Verify Network.';
                        } else if (jqXHR.status == 404) {
                            msg = 'Requested page not found. [404]';
                        } else if (jqXHR.status == 500) {
                            msg = 'Internal Server Error [500].';
                        } else if (exception === 'parsererror') {
                            msg = 'Requested JSON parse failed.';
                        } else if (exception === 'timeout') {
                            msg = 'Time out error.';
                        } else if (exception === 'abort') {
                            msg = 'Ajax request aborted.';
                        } else {
                            msg = 'Uncaught Error.\n' + jqXHR.responseText;
                        }
                        swal("Error", msg, "error");
                    }
} );
</script>